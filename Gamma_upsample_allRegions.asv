clear ;close all;clc
excelFile = "X:\RGECO\DataBase_Xiaodan_3.xlsx";
startInd = 2;
freqLow = 0.02; %Hz
calMax = 8;
hbMax  = 2.5;
FADMax = 1;
hrfMax = 0.005;
mrfMax = 0.004;
samplingRate = 25;
freq_new     = 250;
t_kernel = 30; %s
t=linspace(0,t_kernel-1/freq_new,t_kernel*freq_new);

load("C:\Users\Xiaodan Wang\Documents\GitHub\BauerLabXiaodanScripts\AtlasandIsbrain_Allen.mat",'parcelnames','AtlasSeeds')

% Overlapped brain mask
xform_isbrain_mice = 1;
for excelRow = [181 183 185 228 232 236 202 195 204 230 234 240]
    [~, ~, excelRaw]=xlsread(excelFile,1, ['A',num2str(excelRow),':V',num2str(excelRow)]);
    recDate = excelRaw{1}; recDate = string(recDate);
    mouseName = excelRaw{2}; mouseName = string(mouseName);
    saveDir = excelRaw{4}; saveDir = fullfile(string(saveDir),recDate);
    sessionType = excelRaw{6}; sessionType = sessionType(3:end-2);
    disp(strcat(mouseName,', run #1'))
    processedName = strcat(recDate,'-',mouseName,'-',sessionType,'1_processed','.mat');
    load(fullfile(saveDir,processedName),'xform_isbrain')
    xform_isbrain_mice = xform_isbrain_mice.*xform_isbrain;
end

% Region inside of mouse brain
mask = AtlasSeeds.*xform_isbrain_mice;

for excelRow = [181 183 185 228 232 236 202 195 204 230 234 240]
    % Read data from excel sheet
    [~, ~, excelRaw]=xlsread(excelFile,1, ['A',num2str(excelRow),':V',num2str(excelRow)]);
    recDate = excelRaw{1}; recDate = string(recDate);
    mouseName = excelRaw{2}; mouseName = string(mouseName);
    saveDir = excelRaw{4}; saveDir = fullfile(string(saveDir),recDate);
    sessionType = excelRaw{6}; sessionType = sessionType(3:end-2);
    for n = 1:3 % run #
        disp(strcat(mouseName,', run#',num2str(n)))
        processedName = strcat(recDate,'-',mouseName,'-',sessionType,num2str(n),'_processed','.mat');
        load(fullfile(saveDir,processedName),'xform_datahb','xform_FADCorr','xform_jrgeco1aCorr','xform_isbrain')
        HbT = squeeze(xform_datahb(:,:,1,:)+xform_datahb(:,:,2,:))*10^6;% convert to muM
        clear xform_datahb
        FAD = xform_FADCorr*100;
        clear xform_FADCorr
        Calcium = squeeze(xform_jrgeco1aCorr)*100; % convert to DeltaF/F%
        clear xform_jrgeco1aCorr
        % Pad one more frame to full 10 mins
        HbT    (:,:,end+1) = HbT    (:,:,end);
        FAD    (:,:,end+1) = FAD    (:,:,end);
        Calcium(:,:,end+1) = Calcium(:,:,end);
        % Filter 0.02-2Hz, downsample to 10 Hz
        HbT     = filterData(HbT,   freqLow,2,samplingRate);
        FAD     = filterData(FAD,   freqLow,2,samplingRate);
        Calcium = filterData(Calcium,freqLow,2,samplingRate);

        % Reshape into 30 seconds
        HbT     = reshape(HbT    ,128,128,t_kernel*samplingRate,[]);
        FAD     = reshape(FAD    ,128,128,t_kernel*samplingRate,[]);
        Calcium = reshape(Calcium,128,128,t_kernel*samplingRate,[]);

        % Initialize Gamma NVC and NMC parameters
    
        for h = {'NVC','NMC'}
            eval(strcat('T_',  h{1},' = zeros(21-startInd,50);'))
            eval(strcat('W_',  h{1},' = zeros(21-startInd,50);'))
            eval(strcat('A_',  h{1},' = zeros(21-startInd,50);'))
            eval(strcat('r_',  h{1},' = zeros(21-startInd,50);'))
            eval(strcat('r2_', h{1},' = zeros(21-startInd,50);'))
            eval(strcat('obj_',h{1},' = zeros(21-startInd,50);'))
        end
            hemoPred = zeros(21-startInd,t_kernel*freq_new,50);
            FADPred  = zeros(21-startInd,t_kernel*freq_new,50);
        jj = 1;
        tic
        for ii = startInd:20

            % reshape for each window
            HbT_temp     = reshape(HbT    (:,:,:,ii),128*128,[]);
            FAD_temp     = reshape(FAD    (:,:,:,ii),128*128,[]);
            Calcium_temp = reshape(Calcium(:,:,:,ii),128*128,[]);

            %% Calculate Gamma NVC
            for region = 1:50
                mask_region = zeros(128,128);
                mask_region(mask == region) = 1;
                mask_region = logical(mask_region);
                % mean signal over regions
                HbT_region     = mean(HbT_resample    (mask_region(:),:));
                Calcium_region = mean(Calcium_resample(mask_region(:),:));

                % Upsample to 250Hz
                regHbT     = resample(regHbT    ,freq_new,samplingRate);
                regCalcium = resample(regCalcium,freq_new,samplingRate);

                % Filter again from 0.02 to 2 Hz
                regHbT     = filterData(regHbT    ,freqLow,2,freq_new);
                regCalcium = filterData(regCalcium,freqLow,2,freq_new);
                
                % Gamma fit
                options=optimset('Display','iter','MaxFunEvals',5000,'MaxIter',5000,'TolX',1e-8,'TolF',1e-8);
                he = HemodynamicsError(t,regCalcium,regHbT);
                fcn = @(param)he.fcn(param);
                [x,regHrfParam,obj,exitflag,outputs] = evalc('fminsearchbnd(fcn,[0.6,1.8,0.005],[0.2,0.3,0.0005],[2,3,0.05],options)'); %T, W, A -- guess, lower bound, upper bound
                HRF = hrfGamma(t,regHrfParam(1),regHrfParam(2),regHrfParam(3)); % %T, W, A
                regHemoPred = conv(regCalcium,HRF);
                regHemoPred = regHemoPred(1:length(regCalcium));
                hemoPred(jj,:,region)= regHemoPred;
                T_NVC(jj,region)   = regHrfParam(1);
                W_NVC(jj,region)   = regHrfParam(2);
                A_NVC(jj,region)   = regHrfParam(3);
                r_NVC(jj,region)   = corr(regHemoPred',regHbT');%real(atanh(corr(pixHemoPred',pixHemo')));
                r2_NVC(jj,region)  = 1-sumsqr(regHbT-regHemoPred)/sumsqr(regHbT-mean(regHbT));
                obj_NVC(jj,region) = obj;%1 - var(pixHemoPred - pixHemo)/var(pixHemo);
                clear regHbT regCalcium

                % make directory
                saveName = fullfile(saveDir,'Gamma_NVC', strcat(recDate,'-',mouseName,'-',sessionType,num2str(n),'_Gamma_NVC.mat'));
                if ~exist(fullfile(saveDir,'Gamma_NVC'))
                    mkdir(fullfile(saveDir,'Gamma_NVC'))
                end
                % save
                if exist(saveName,'file')
                    save(saveName,'hemoPred','T_NVC','W_NVC','r_NVC','r2_NVC','obj_NVC','-append')
                else
                    save(saveName,'hemoPred','T_NVC','W_NVC','r_NVC','r2_NVC','obj_NVC')
                end
            end
            clear HbT_temp

            %% Calculate Gamma NMC
            for region = 1:50
                % mean signal over regions
                FAD_region     = mean(FAD_resample    (mask_region(:),:));
                Calcium_region = mean(Calcium_resample(mask_region(:),:));

                % Upsample to 250Hz
                regFAD     = resample(regFAD    ,freq_new,samplingRate);
                regCalcium = resample(regCalcium,freq_new,samplingRate);

                % Filter again from 0.02 to 2 Hz
                regFAD    = filterData(regFAD    ,freqLow,2,freq_new);
                regCalcium = filterData(regCalcium,freqLow,2,freq_new);

                % Gamma fit
                options=optimset('Display','iter','MaxFunEvals',5000,'MaxIter',5000,'TolX',1e-8,'TolF',1e-8);
                he = HemodynamicsError(t,regCalcium,regFAD);
                fcn = @(param)he.fcn(param);
                [x,regMrfParam,obj,exitflag,outputs] = evalc('fminsearchbnd(fcn,[0.1,0.02,0.002],[0.004,0.004,0.0005],[0.6,1.2,0.02],options)'); %T, W, A -- guess, lower bound, upper bound
                MRF = hrfGamma(t,regMrfParam(1),regMrfParam(2),regMrfParam(3)); % %T, W, A
                regFADPred = conv(regCalcium,MRF);
                regFADPred = regFADPred(1:length(regCalcium));
                eval(strcat('FADPred_',region{1},'(jj,:)= regFADPred;'))
                eval(strcat('T_NMC_'  ,region{1},'(jj)= regMrfParam(1);'))
                eval(strcat('W_NMC_'  ,region{1},'(jj)= regMrfParam(2);'))
                eval(strcat('A_NMC_'  ,region{1},'(jj)= regMrfParam(3);'))
                eval(strcat('r_NMC_'  ,region{1},'(jj)= corr(regFADPred',char(39),',regFAD',char(39),');'))%real(atanh(corr(pixHemoPred',pixHemo')));
                eval(strcat('r2_NMC_' ,region{1},'(jj)= 1-sumsqr(regFAD-regFADPred)/sumsqr(regFAD-mean(regFAD));'))
                eval(strcat('obj_NMC_',region{1},'(jj)= obj;'))%1 - var(pixHemoPred - pixHemo)/var(pixHemo);
                clear regFAD regCalcium

                % make directory
                saveName = fullfile(saveDir,'Gamma_NMC', strcat(recDate,'-',mouseName,'-',sessionType,num2str(n),'_Gamma_NMC.mat'));
                if ~exist(fullfile(saveDir,'Gamma_NMC'))
                    mkdir(fullfile(saveDir,'Gamma_NMC'))
                end
                % save
                if exist(saveName,'file')
                    eval(strcat('save(',char(39),saveName,char(39),',',...
                        char(39),'FADPred_',region{1},char(39),',',...
                        char(39),'T_NMC_'    ,region{1},char(39),',',...
                        char(39),'W_NMC_'    ,region{1},char(39),',',...
                        char(39),'A_NMC_'    ,region{1},char(39),',',...
                        char(39),'r_NMC_'    ,region{1},char(39),',',...
                        char(39),'r2_NMC_'   ,region{1},char(39),',',...
                        char(39),'obj_NMC_'  ,region{1},char(39),',',...
                        char(39),'-append',char(39),')'))
                else
                    eval(strcat('save(',char(39),saveName,char(39),',',...
                        char(39),'FADPred_',region{1},char(39),',',...
                        char(39),'T_NMC_'    ,region{1},char(39),',',...
                        char(39),'W_NMC_'    ,region{1},char(39),',',...
                        char(39),'A_NMC_'    ,region{1},char(39),',',...
                        char(39),'r_NMC_'    ,region{1},char(39),',',...
                        char(39),'r2_NMC_'   ,region{1},char(39),',',...
                        char(39),'obj_NMC_'  ,region{1},char(39),')'))
                end
            end
            clear FAD_temp Calcium_temp
            jj = jj +1;
        end
        toc
    end
end


